# Generated by Django 5.2.3 on 2025-07-22 03:28

import django.utils.timezone
import spa.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('status', models.CharField(choices=[('PENDING_ADVANCE', 'Pendiente de Pago de Anticipo'), ('CONFIRMED', 'Confirmada (Anticipo Pagado)'), ('COMPLETED_PENDING_FINAL_PAYMENT', 'Completada (Pago Final Pendiente)'), ('COMPLETED', 'Completada y Pagada'), ('CANCELLED_BY_CLIENT', 'Cancelada por el Cliente'), ('CANCELLED_BY_SYSTEM', 'Cancelada por el Sistema'), ('CANCELLED_BY_ADMIN', 'Cancelada por el Administrador'), ('REDEEMED_WITH_VOUCHER', 'Redimida con Voucher')], default='PENDING_ADVANCE', max_length=40)),
                ('price_at_purchase', models.DecimalField(decimal_places=2, help_text='Final price for the service. Can be 0 if paid with a voucher.', max_digits=10)),
                ('reschedule_count', models.PositiveIntegerField(default=0, help_text='How many times this appointment has been rescheduled by the client.')),
            ],
            options={
                'verbose_name': 'Appointment',
                'verbose_name_plural': 'Appointments',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('grants_vip_months', models.PositiveIntegerField(default=0, help_text='Number of free VIP months granted upon purchase.')),
                ('validity_days', models.PositiveIntegerField(default=90, help_text='Number of days the vouchers from this package are valid after purchase.')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PackageService',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.PositiveIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('PENDING', 'Pendiente'), ('APPROVED', 'Aprobado'), ('DECLINED', 'Declinado'), ('ERROR', 'Error')], default='PENDING', max_length=20)),
                ('transaction_id', models.CharField(blank=True, help_text='ID from the payment gateway (e.g., Wompi)', max_length=255, null=True, unique=True)),
                ('payment_type', models.CharField(choices=[('ADVANCE', 'Anticipo de Cita'), ('FINAL', 'Pago Final de Cita'), ('PACKAGE', 'Compra de Paquete'), ('VIP_SUBSCRIPTION', 'Suscripción VIP')], max_length=16)),
                ('raw_response', models.JSONField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('duration', models.PositiveIntegerField(help_text='Duration in minutes')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('vip_price', models.DecimalField(blank=True, decimal_places=2, help_text='Optional discounted price for VIP members.', max_digits=10, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether the service is available for booking.')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_low_supervision', models.BooleanField(default=False, help_text='Enable optimized booking for services not requiring constant supervision.')),
            ],
            options={
                'verbose_name': 'Service Category',
                'verbose_name_plural': 'Service Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StaffAvailability',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('day_of_week', models.IntegerField(choices=[(1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
            ],
            options={
                'verbose_name': 'Staff Availability',
                'verbose_name_plural': 'Staff Availabilities',
                'ordering': ['staff_member', 'day_of_week', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='SubscriptionLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateField(help_text='Fecha de inicio del período de la membresía.')),
                ('end_date', models.DateField(help_text='Fecha de finalización del período de la membresía.')),
            ],
            options={
                'verbose_name': 'Registro de Suscripción',
                'verbose_name_plural': 'Registros de Suscripciones',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='UserPackage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('purchase_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('expires_at', models.DateField(default=django.utils.timezone.now, help_text='Date when the vouchers from this package expire.')),
            ],
            options={
                'verbose_name': "User's Purchased Package",
                'verbose_name_plural': "User's Purchased Packages",
                'ordering': ['-purchase_date'],
            },
        ),
        migrations.CreateModel(
            name='Voucher',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(default=spa.models.generate_voucher_code, editable=False, max_length=8, unique=True)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Disponible'), ('REDEEMED', 'Redimido'), ('EXPIRED', 'Expirado')], default='AVAILABLE', max_length=10)),
            ],
            options={
                'verbose_name': 'Service Voucher',
                'verbose_name_plural': 'Service Vouchers',
                'ordering': ['-created_at'],
            },
        ),
    ]
