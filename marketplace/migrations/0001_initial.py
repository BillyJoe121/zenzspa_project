# Generated by Django 5.2.3 on 2025-07-22 05:24

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('spa', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Carrito Activo')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Carrito de Compras',
                'verbose_name_plural': 'Carritos de Compras',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('PENDING_PAYMENT', 'Pendiente de Pago'), ('PAID', 'Pagada'), ('PREPARING', 'En Preparación'), ('SHIPPED', 'Enviada'), ('DELIVERED', 'Entregada'), ('CANCELLED', 'Cancelada'), ('RETURNED', 'Devuelta')], default='PENDING_PAYMENT', max_length=20, verbose_name='Estado de la Orden')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Monto Total')),
                ('delivery_option', models.CharField(choices=[('PICKUP', 'Recogida en Local'), ('DELIVERY', 'Envío a Domicilio'), ('ASSOCIATE_TO_APPOINTMENT', 'Asociar a Cita Futura')], max_length=30, verbose_name='Opción de Entrega')),
                ('delivery_address', models.TextField(blank=True, null=True, verbose_name='Dirección de Envío')),
                ('tracking_number', models.CharField(blank=True, max_length=100, verbose_name='Número de Seguimiento')),
                ('shipping_date', models.DateField(blank=True, null=True, verbose_name='Fecha de Envío')),
                ('wompi_transaction_id', models.CharField(blank=True, max_length=100, verbose_name='ID Transacción Wompi')),
                ('associated_appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='spa.appointment', verbose_name='Cita Asociada')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
                ('voucher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='spa.voucher', verbose_name='Voucher Utilizado')),
            ],
            options={
                'verbose_name': 'Orden',
                'verbose_name_plural': 'Órdenes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, verbose_name='Nombre del Producto')),
                ('description', models.TextField(verbose_name='Descripción')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio Regular')),
                ('vip_price', models.DecimalField(blank=True, decimal_places=2, help_text='Precio con descuento para miembros VIP. Dejar en blanco si no aplica.', max_digits=10, null=True, verbose_name='Precio para VIPs')),
                ('stock', models.PositiveIntegerField(default=0, verbose_name='Cantidad en Stock')),
                ('is_active', models.BooleanField(default=True, help_text='Indica si el producto está visible y disponible para la compra.', verbose_name='Activo')),
                ('preparation_days', models.PositiveSmallIntegerField(default=1, verbose_name='Días de Preparación')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='spa.servicecategory', verbose_name='Categoría')),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Cantidad')),
                ('price_at_purchase', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio al Comprar')),
                ('quantity_returned', models.PositiveIntegerField(default=0, verbose_name='Cantidad Devuelta')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='marketplace.order', verbose_name='Orden')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='marketplace.product', verbose_name='Producto')),
            ],
            options={
                'verbose_name': 'Ítem de Orden',
                'verbose_name_plural': 'Ítems de Órdenes',
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='marketplace.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.product')),
            ],
            options={
                'verbose_name': 'Ítem de Carrito',
                'verbose_name_plural': 'Ítems de Carrito',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='product_images/', verbose_name='Imagen')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Imagen Principal')),
                ('alt_text', models.CharField(blank=True, max_length=255, verbose_name='Texto Alternativo')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='marketplace.product')),
            ],
            options={
                'verbose_name': 'Imagen de Producto',
                'verbose_name_plural': 'Imágenes de Producto',
                'ordering': ['-is_primary', 'created_at'],
            },
        ),
        migrations.AddConstraint(
            model_name='cart',
            constraint=models.UniqueConstraint(condition=models.Q(('is_active', True)), fields=('user',), name='unique_active_cart_per_user'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['status'], name='marketplace_status_6b27f5_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['user', 'created_at'], name='marketplace_user_id_5a31ad_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['is_active'], name='marketplace_is_acti_90c2f9_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['stock'], name='marketplace_stock_d1e4fb_idx'),
        ),
        migrations.AddConstraint(
            model_name='cartitem',
            constraint=models.UniqueConstraint(fields=('cart', 'product'), name='unique_product_in_cart'),
        ),
    ]
