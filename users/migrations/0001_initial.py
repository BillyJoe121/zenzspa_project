# Generated by Django 5.2.3 on 2025-07-22 03:28

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('phone_number', models.CharField(max_length=15, unique=True, verbose_name='Número de Teléfono')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Correo Electrónico')),
                ('first_name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('last_name', models.CharField(blank=True, max_length=100, verbose_name='Apellido')),
                ('role', models.CharField(choices=[('CLIENT', 'Cliente'), ('VIP', 'Suscriptor VIP'), ('STAFF', 'Trabajador'), ('ADMIN', 'Administrador')], default='CLIENT', max_length=10, verbose_name='Rol')),
                ('vip_expires_at', models.DateField(blank=True, help_text='Indica hasta qué fecha la membresía VIP del usuario está activa.', null=True, verbose_name='Fecha de Vencimiento VIP')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verificado por SMS')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Personal del Staff')),
                ('is_persona_non_grata', models.BooleanField(default=False, verbose_name='Cliente No Grato')),
                ('internal_notes', models.TextField(blank=True, null=True, verbose_name='Notas Internas (Staff/Admin)')),
                ('internal_photo_url', models.URLField(blank=True, max_length=512, null=True, verbose_name='URL de Foto Interna (Staff/Admin)')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
        ),
    ]
